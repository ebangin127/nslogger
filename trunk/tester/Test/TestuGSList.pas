unit TestuGSList;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uGSNode, Windows, Generics.Collections, uGSList, SysUtils, Threading,
  Math;

type
  // Test methods for class TGSList

  TestTGSList = class(TTestCase)
  strict private
    FGSList: TGSList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestBigList;
  end;

implementation

procedure TestTGSList.SetUp;
begin
  FGSList := TGSList.Create;
end;

procedure TestTGSList.TearDown;
begin
  FGSList.Free;
  FGSList := nil;
end;

procedure TestTGSList.TestBigList;
var
  CurrItem: Integer;
  Iterator: IGSListIterator;
begin
  try
    for CurrItem := 0 to 39923531 do
    begin
      FGSList.AddNode(
        TGSNode.CreateByValues(TIOType.ioWrite, CurrItem, CurrItem));
    end;

    Iterator := FGSList.GetIterator;
    for CurrItem := 0 to FGSList.Count - 1 do
    begin
      if CurrItem = 39923531 then
        CheckEquals(Iterator.GetNextItem.GetLBA, 39923531)
      else
        Iterator.GetNextItem;
    end;
  except
    on E: EOutOfMemory do
      Fail('Failed at: ' + IntToStr(CurrItem));
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTGSList.Suite);
end.


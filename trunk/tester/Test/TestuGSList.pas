unit TestuTraceList;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uGSNode, Windows, Generics.Collections, uTraceList, SysUtils, Threading,
  Math;

type
  // Test methods for class TTraceList

  TestTTraceList = class(TTestCase)
  strict private
    FTraceList: TTraceList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestBigList;
  end;

implementation

procedure TestTTraceList.SetUp;
begin
  FTraceList := TTraceList.Create;
end;

procedure TestTTraceList.TearDown;
begin
  FTraceList.Free;
  FTraceList := nil;
end;

procedure TestTTraceList.TestBigList;
var
  CurrItem: Integer;
  Iterator: ITraceListIterator;
begin
  try
    for CurrItem := 0 to 39923531 do
    begin
      FTraceList.AddNode(
        TTraceNode.CreateByValues(TIOType.ioWrite, CurrItem, CurrItem));
    end;

    Iterator := FTraceList.GetIterator;
    for CurrItem := 0 to FTraceList.Count - 1 do
    begin
      if CurrItem = 39923531 then
        CheckEquals(Iterator.GetNextItem.GetLBA, 39923531)
      else
        Iterator.GetNextItem;
    end;
  except
    on E: EOutOfMemory do
      Fail('Failed at: ' + IntToStr(CurrItem));
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTTraceList.Suite);
end.

